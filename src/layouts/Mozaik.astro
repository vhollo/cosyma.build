---
import Layout from '$layouts/Layout.astro'
//import Page from '$layouts/Page.astro'
import Image from '$lib/Image.astro'
import { Markdown } from 'astro/components'
// Component Imports
// import Header from '$lib/Header.astro'
// You can import components from any supported Framework here!


// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.

const { post, posts, summaryfrom, title, subtitle, summary, image, content } = Astro.props
//console.log(posts)
//console.log('MOZAIK', Astro.props)

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---
<Layout {...Astro.props} meta={title || content?.title || post?.title}>

{(title || content?.title) && (
<h1>{title || content?.title || post?.title}</h1>
)}
<Image image={image || content?.image || post?.image}/>
{(subtitle || content?.subtitle || post?.subtitle) && (
<h2>{subtitle || content?.subtitle || post?.subtitle}</h2>
)}
{(summary || content?.summary || post?.summary) && (
  <h3><Markdown content={summary || content?.summary || post?.summary}/></h3>
)}

<article>
  {post?.astro.html && 
  post.astro.html}
  <slot/>
</article>

<main>
  {posts?.map((item) => item.published !== false && (
    <a href={item.weblink || item.url} class={item.index}>
      <aside>
        <h1>{item.title}</h1>
        {item.image && <Image folder={item.folder} image={item.image}/>}
        {item.subtitle && <h3>{item.subtitle}</h3>}
        {item.summary && <p>{item.summary}</p>}
        {(summaryfrom == 'auto' && !item.summary) && (
          item.astro.html
        )}
      </aside>
      <!-- <button>[â€¦]</button> -->
    </a>
  ))}
</main>
</Layout>

<style>
  @media all and (min-width: 65ch) {
    :root {
      --figurewidth: 80ch;
    }
    main {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(32ch, 1fr));
      grid-auto-flow: dense;
    }
  }
  a {
    /*flex-basis: 100%;*/
    /*width: 64ch;*/
    /*flex-grow: 1;
    flex-shrink: 0;*/
    /*width: 0;
    min-width: 32%;*/

    /*margin-bottom: -5vh;*/
    padding: 0 2vw /*12vh*/;
    box-sizing: content-box;
    transition: all .25s;
    position: relative;
    display: block;
    border-radius: 0.35rem;

    background-color: aliceblue;
    box-shadow: lightgrey 0 0 .5rem;
  }
  a.double {
    grid-column-end: span 2;
    /*grid-row-end: span 2;*/
  }
  a:hover {
    transform: scale(1.025);
    box-shadow: lightgrey 0 0 1rem;
  }

  /*main > *:nth-child(odd) {
    background-color:lightblue;
    margin-left: auto;
  }
  main > *:nth-child(even) {
    background-color: aliceblue;
    margin-right: auto;
  }*/

  a:last-child {
    padding-bottom: 5vh;
  }

  /*aside {
    position: relative;
  }*/

  a:last-child > button {
    bottom: 3vh;
  }
  a:nth-child(odd) > button {
    right: 4vw;
  }
  a:nth-child(even) > button {
    left: 4vw;
  }

  h3 {
    /*padding: 2vh 4vw;*/
    text-align: center;
  }
  blockquote {
    border-bottom: 2px solid;
  }
  
  /*button {
    position: absolute;
    bottom: 8vh;
  }*/

</style>
